import kotlin.collections.List;
import org.threeten.bp.LocalDateTime;

CREATE TABLE tvGuidePojo (
  id TEXT NOT NULL PRIMARY KEY,
  channelId TEXT NOT NULL,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  imageUrl TEXT,
  category TEXT,
  year INTEGER As Int,
  country TEXT,
  credits_director TEXT,
  credits_actors TEXT as List<String>,
  rating TEXT,
  startTime INTEGER AS LocalDateTime NOT NULL,
  endTime INTEGER AS LocalDateTime NOT NULL
);

CREATE INDEX tv_guide_program_title ON tvGuidePojo(title);
CREATE INDEX tv_guide_program_title_and_time ON tvGuidePojo(title, startTime, endTime);

insert:
  INSERT INTO tvGuidePojo(
    id, channelId, title, description, imageUrl, category, year, country,
    credits_director, credits_actors, rating, startTime, endTime
  )
  VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );

update:
  UPDATE tvGuidePojo
  SET
    id = :id,
    channelId = ?,
    title = ?,
    description = ?,
    imageUrl = ?,
    category = ?,
    year = ?,
    country = ?,
    credits_director = ?,
    credits_actors = ?,
    rating = ?,
    startTime = ?,
    endTime = ?
  WHERE id = :id;

deleteAll:
  DELETE FROM tvGuidePojo;

deleteWithEndTimeLessThan:
  DELETE FROM tvGuidePojo
  WHERE endTime < ?;

count:
  SELECT count(*) FROM tvGuidePojo;

selectAll:
  SELECT *
  FROM tvGuidePojo;

select:
  SELECT *
  FROM tvGuidePojo
  LIMIT :limit OFFSET :offset;

selectById:
  SELECT  *
  FROM tvGuidePojo
  WHERE id = ?
  LIMIT 1;

selectByChannelId:
  SELECT *
  FROM tvGuidePojo
  WHERE channelId = ?
  AND :time BETWEEN startTime AND endTime
  LIMIT 1;

selectByChannelIdRanged:
  SELECT *
  FROM tvGuidePojo
  WHERE channelId = ?
  AND (
    ( startTime = :from AND endTime = :to ) -- Workaround for infer type of :from and :to
    OR (
      startTime BETWEEN :from AND :to
      OR
      endTime BETWEEN :from AND :to
      OR
      :from BETWEEN startTime AND endTime
      OR
      :to BETWEEN startTime AND endTime
    )
  );

selectByTitle:
  SELECT *
  FROM tvGuidePojo
  WHERE title LIKE ?;